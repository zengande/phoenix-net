// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: requests.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from requests.proto</summary>
public static partial class RequestsReflection {

  #region Descriptor
  /// <summary>File descriptor for requests.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RequestsReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5yZXF1ZXN0cy5wcm90bxoMY29tbW9uLnByb3RvIigKD0NhdGFsb2dzUmVx",
          "dWVzdBIVCg1jb25uZWN0aW9uX2lkGAEgASgJIjAKF0RhdGFiYXNlUHJvcGVy",
          "dHlSZXF1ZXN0EhUKDWNvbm5lY3Rpb25faWQYASABKAkiUAoOU2NoZW1hc1Jl",
          "cXVlc3QSDwoHY2F0YWxvZxgBIAEoCRIWCg5zY2hlbWFfcGF0dGVybhgCIAEo",
          "CRIVCg1jb25uZWN0aW9uX2lkGAMgASgJIpUBCg1UYWJsZXNSZXF1ZXN0Eg8K",
          "B2NhdGFsb2cYASABKAkSFgoOc2NoZW1hX3BhdHRlcm4YAiABKAkSGgoSdGFi",
          "bGVfbmFtZV9wYXR0ZXJuGAMgASgJEhEKCXR5cGVfbGlzdBgEIAMoCRIVCg1o",
          "YXNfdHlwZV9saXN0GAYgASgIEhUKDWNvbm5lY3Rpb25faWQYByABKAkiKgoR",
          "VGFibGVUeXBlc1JlcXVlc3QSFQoNY29ubmVjdGlvbl9pZBgBIAEoCSKJAQoO",
          "Q29sdW1uc1JlcXVlc3QSDwoHY2F0YWxvZxgBIAEoCRIWCg5zY2hlbWFfcGF0",
          "dGVybhgCIAEoCRIaChJ0YWJsZV9uYW1lX3BhdHRlcm4YAyABKAkSGwoTY29s",
          "dW1uX25hbWVfcGF0dGVybhgEIAEoCRIVCg1jb25uZWN0aW9uX2lkGAUgASgJ",
          "IigKD1R5cGVJbmZvUmVxdWVzdBIVCg1jb25uZWN0aW9uX2lkGAEgASgJIqEB",
          "ChhQcmVwYXJlQW5kRXhlY3V0ZVJlcXVlc3QSFQoNY29ubmVjdGlvbl9pZBgB",
          "IAEoCRILCgNzcWwYAiABKAkSFQoNbWF4X3Jvd19jb3VudBgDIAEoBBIUCgxz",
          "dGF0ZW1lbnRfaWQYBCABKA0SFgoObWF4X3Jvd3NfdG90YWwYBSABKAMSHAoU",
          "Zmlyc3RfZnJhbWVfbWF4X3NpemUYBiABKAUiYwoOUHJlcGFyZVJlcXVlc3QS",
          "FQoNY29ubmVjdGlvbl9pZBgBIAEoCRILCgNzcWwYAiABKAkSFQoNbWF4X3Jv",
          "d19jb3VudBgDIAEoBBIWCg5tYXhfcm93c190b3RhbBgEIAEoAyKAAQoMRmV0",
          "Y2hSZXF1ZXN0EhUKDWNvbm5lY3Rpb25faWQYASABKAkSFAoMc3RhdGVtZW50",
          "X2lkGAIgASgNEg4KBm9mZnNldBgDIAEoBBIbChNmZXRjaF9tYXhfcm93X2Nv",
          "dW50GAQgASgNEhYKDmZyYW1lX21heF9zaXplGAUgASgFIi8KFkNyZWF0ZVN0",
          "YXRlbWVudFJlcXVlc3QSFQoNY29ubmVjdGlvbl9pZBgBIAEoCSJEChVDbG9z",
          "ZVN0YXRlbWVudFJlcXVlc3QSFQoNY29ubmVjdGlvbl9pZBgBIAEoCRIUCgxz",
          "dGF0ZW1lbnRfaWQYAiABKA0iiwEKFU9wZW5Db25uZWN0aW9uUmVxdWVzdBIV",
          "Cg1jb25uZWN0aW9uX2lkGAEgASgJEi4KBGluZm8YAiADKAsyIC5PcGVuQ29u",
          "bmVjdGlvblJlcXVlc3QuSW5mb0VudHJ5GisKCUluZm9FbnRyeRILCgNrZXkY",
          "ASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIi8KFkNsb3NlQ29ubmVjdGlvblJl",
          "cXVlc3QSFQoNY29ubmVjdGlvbl9pZBgBIAEoCSJZChVDb25uZWN0aW9uU3lu",
          "Y1JlcXVlc3QSFQoNY29ubmVjdGlvbl9pZBgBIAEoCRIpCgpjb25uX3Byb3Bz",
          "GAIgASgLMhUuQ29ubmVjdGlvblByb3BlcnRpZXMixwEKDkV4ZWN1dGVSZXF1",
          "ZXN0EikKD3N0YXRlbWVudEhhbmRsZRgBIAEoCzIQLlN0YXRlbWVudEhhbmRs",
          "ZRIlChBwYXJhbWV0ZXJfdmFsdWVzGAIgAygLMgsuVHlwZWRWYWx1ZRInCh9k",
          "ZXByZWNhdGVkX2ZpcnN0X2ZyYW1lX21heF9zaXplGAMgASgEEhwKFGhhc19w",
          "YXJhbWV0ZXJfdmFsdWVzGAQgASgIEhwKFGZpcnN0X2ZyYW1lX21heF9zaXpl",
          "GAUgASgFIm0KElN5bmNSZXN1bHRzUmVxdWVzdBIVCg1jb25uZWN0aW9uX2lk",
          "GAEgASgJEhQKDHN0YXRlbWVudF9pZBgCIAEoDRIaCgVzdGF0ZRgDIAEoCzIL",
          "LlF1ZXJ5U3RhdGUSDgoGb2Zmc2V0GAQgASgEIiYKDUNvbW1pdFJlcXVlc3QS",
          "FQoNY29ubmVjdGlvbl9pZBgBIAEoCSIoCg9Sb2xsYmFja1JlcXVlc3QSFQoN",
          "Y29ubmVjdGlvbl9pZBgBIAEoCSJiCh1QcmVwYXJlQW5kRXhlY3V0ZUJhdGNo",
          "UmVxdWVzdBIVCg1jb25uZWN0aW9uX2lkGAEgASgJEhQKDHN0YXRlbWVudF9p",
          "ZBgCIAEoDRIUCgxzcWxfY29tbWFuZHMYAyADKAkiNAoLVXBkYXRlQmF0Y2gS",
          "JQoQcGFyYW1ldGVyX3ZhbHVlcxgBIAMoCzILLlR5cGVkVmFsdWUiYQoTRXhl",
          "Y3V0ZUJhdGNoUmVxdWVzdBIVCg1jb25uZWN0aW9uX2lkGAEgASgJEhQKDHN0",
          "YXRlbWVudF9pZBgCIAEoDRIdCgd1cGRhdGVzGAMgAygLMgwuVXBkYXRlQmF0",
          "Y2hCIgogb3JnLmFwYWNoZS5jYWxjaXRlLmF2YXRpY2EucHJvdG9iBnByb3Rv",
          "Mw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::CommonReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CatalogsRequest), global::CatalogsRequest.Parser, new[]{ "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DatabasePropertyRequest), global::DatabasePropertyRequest.Parser, new[]{ "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SchemasRequest), global::SchemasRequest.Parser, new[]{ "Catalog", "SchemaPattern", "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TablesRequest), global::TablesRequest.Parser, new[]{ "Catalog", "SchemaPattern", "TableNamePattern", "TypeList", "HasTypeList", "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TableTypesRequest), global::TableTypesRequest.Parser, new[]{ "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ColumnsRequest), global::ColumnsRequest.Parser, new[]{ "Catalog", "SchemaPattern", "TableNamePattern", "ColumnNamePattern", "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TypeInfoRequest), global::TypeInfoRequest.Parser, new[]{ "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PrepareAndExecuteRequest), global::PrepareAndExecuteRequest.Parser, new[]{ "ConnectionId", "Sql", "MaxRowCount", "StatementId", "MaxRowsTotal", "FirstFrameMaxSize" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PrepareRequest), global::PrepareRequest.Parser, new[]{ "ConnectionId", "Sql", "MaxRowCount", "MaxRowsTotal" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FetchRequest), global::FetchRequest.Parser, new[]{ "ConnectionId", "StatementId", "Offset", "FetchMaxRowCount", "FrameMaxSize" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateStatementRequest), global::CreateStatementRequest.Parser, new[]{ "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CloseStatementRequest), global::CloseStatementRequest.Parser, new[]{ "ConnectionId", "StatementId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OpenConnectionRequest), global::OpenConnectionRequest.Parser, new[]{ "ConnectionId", "Info" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CloseConnectionRequest), global::CloseConnectionRequest.Parser, new[]{ "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ConnectionSyncRequest), global::ConnectionSyncRequest.Parser, new[]{ "ConnectionId", "ConnProps" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ExecuteRequest), global::ExecuteRequest.Parser, new[]{ "StatementHandle", "ParameterValues", "DeprecatedFirstFrameMaxSize", "HasParameterValues", "FirstFrameMaxSize" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SyncResultsRequest), global::SyncResultsRequest.Parser, new[]{ "ConnectionId", "StatementId", "State", "Offset" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CommitRequest), global::CommitRequest.Parser, new[]{ "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RollbackRequest), global::RollbackRequest.Parser, new[]{ "ConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PrepareAndExecuteBatchRequest), global::PrepareAndExecuteBatchRequest.Parser, new[]{ "ConnectionId", "StatementId", "SqlCommands" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateBatch), global::UpdateBatch.Parser, new[]{ "ParameterValues" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ExecuteBatchRequest), global::ExecuteBatchRequest.Parser, new[]{ "ConnectionId", "StatementId", "Updates" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// Request for Meta#getCatalogs()
/// </summary>
public sealed partial class CatalogsRequest : pb::IMessage<CatalogsRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CatalogsRequest> _parser = new pb::MessageParser<CatalogsRequest>(() => new CatalogsRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CatalogsRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CatalogsRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CatalogsRequest(CatalogsRequest other) : this() {
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CatalogsRequest Clone() {
    return new CatalogsRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CatalogsRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CatalogsRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CatalogsRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#getDatabaseProperties()
/// </summary>
public sealed partial class DatabasePropertyRequest : pb::IMessage<DatabasePropertyRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<DatabasePropertyRequest> _parser = new pb::MessageParser<DatabasePropertyRequest>(() => new DatabasePropertyRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DatabasePropertyRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatabasePropertyRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatabasePropertyRequest(DatabasePropertyRequest other) : this() {
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatabasePropertyRequest Clone() {
    return new DatabasePropertyRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DatabasePropertyRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DatabasePropertyRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DatabasePropertyRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#getSchemas(String, org.apache.calcite.avatica.Meta.Pat)}
/// </summary>
public sealed partial class SchemasRequest : pb::IMessage<SchemasRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SchemasRequest> _parser = new pb::MessageParser<SchemasRequest>(() => new SchemasRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SchemasRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SchemasRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SchemasRequest(SchemasRequest other) : this() {
    catalog_ = other.catalog_;
    schemaPattern_ = other.schemaPattern_;
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SchemasRequest Clone() {
    return new SchemasRequest(this);
  }

  /// <summary>Field number for the "catalog" field.</summary>
  public const int CatalogFieldNumber = 1;
  private string catalog_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Catalog {
    get { return catalog_; }
    set {
      catalog_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "schema_pattern" field.</summary>
  public const int SchemaPatternFieldNumber = 2;
  private string schemaPattern_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SchemaPattern {
    get { return schemaPattern_; }
    set {
      schemaPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 3;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SchemasRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SchemasRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Catalog != other.Catalog) return false;
    if (SchemaPattern != other.SchemaPattern) return false;
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Catalog.Length != 0) hash ^= Catalog.GetHashCode();
    if (SchemaPattern.Length != 0) hash ^= SchemaPattern.GetHashCode();
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Catalog.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Catalog);
    }
    if (SchemaPattern.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SchemaPattern);
    }
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Catalog.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Catalog);
    }
    if (SchemaPattern.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SchemaPattern);
    }
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Catalog.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Catalog);
    }
    if (SchemaPattern.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaPattern);
    }
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SchemasRequest other) {
    if (other == null) {
      return;
    }
    if (other.Catalog.Length != 0) {
      Catalog = other.Catalog;
    }
    if (other.SchemaPattern.Length != 0) {
      SchemaPattern = other.SchemaPattern;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Catalog = input.ReadString();
          break;
        }
        case 18: {
          SchemaPattern = input.ReadString();
          break;
        }
        case 26: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Catalog = input.ReadString();
          break;
        }
        case 18: {
          SchemaPattern = input.ReadString();
          break;
        }
        case 26: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Request for Meta#getTables(String, org.apache.calcite.avatica.Meta.Pat,
///   org.apache.calcite.avatica.Meta.Pat, java.util.List)
/// </summary>
public sealed partial class TablesRequest : pb::IMessage<TablesRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TablesRequest> _parser = new pb::MessageParser<TablesRequest>(() => new TablesRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TablesRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TablesRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TablesRequest(TablesRequest other) : this() {
    catalog_ = other.catalog_;
    schemaPattern_ = other.schemaPattern_;
    tableNamePattern_ = other.tableNamePattern_;
    typeList_ = other.typeList_.Clone();
    hasTypeList_ = other.hasTypeList_;
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TablesRequest Clone() {
    return new TablesRequest(this);
  }

  /// <summary>Field number for the "catalog" field.</summary>
  public const int CatalogFieldNumber = 1;
  private string catalog_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Catalog {
    get { return catalog_; }
    set {
      catalog_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "schema_pattern" field.</summary>
  public const int SchemaPatternFieldNumber = 2;
  private string schemaPattern_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SchemaPattern {
    get { return schemaPattern_; }
    set {
      schemaPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "table_name_pattern" field.</summary>
  public const int TableNamePatternFieldNumber = 3;
  private string tableNamePattern_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TableNamePattern {
    get { return tableNamePattern_; }
    set {
      tableNamePattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type_list" field.</summary>
  public const int TypeListFieldNumber = 4;
  private static readonly pb::FieldCodec<string> _repeated_typeList_codec
      = pb::FieldCodec.ForString(34);
  private readonly pbc::RepeatedField<string> typeList_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> TypeList {
    get { return typeList_; }
  }

  /// <summary>Field number for the "has_type_list" field.</summary>
  public const int HasTypeListFieldNumber = 6;
  private bool hasTypeList_;
  /// <summary>
  /// Having an empty type_list is distinct from a null type_list
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasTypeList {
    get { return hasTypeList_; }
    set {
      hasTypeList_ = value;
    }
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 7;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TablesRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TablesRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Catalog != other.Catalog) return false;
    if (SchemaPattern != other.SchemaPattern) return false;
    if (TableNamePattern != other.TableNamePattern) return false;
    if(!typeList_.Equals(other.typeList_)) return false;
    if (HasTypeList != other.HasTypeList) return false;
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Catalog.Length != 0) hash ^= Catalog.GetHashCode();
    if (SchemaPattern.Length != 0) hash ^= SchemaPattern.GetHashCode();
    if (TableNamePattern.Length != 0) hash ^= TableNamePattern.GetHashCode();
    hash ^= typeList_.GetHashCode();
    if (HasTypeList != false) hash ^= HasTypeList.GetHashCode();
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Catalog.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Catalog);
    }
    if (SchemaPattern.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SchemaPattern);
    }
    if (TableNamePattern.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(TableNamePattern);
    }
    typeList_.WriteTo(output, _repeated_typeList_codec);
    if (HasTypeList != false) {
      output.WriteRawTag(48);
      output.WriteBool(HasTypeList);
    }
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Catalog.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Catalog);
    }
    if (SchemaPattern.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SchemaPattern);
    }
    if (TableNamePattern.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(TableNamePattern);
    }
    typeList_.WriteTo(ref output, _repeated_typeList_codec);
    if (HasTypeList != false) {
      output.WriteRawTag(48);
      output.WriteBool(HasTypeList);
    }
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Catalog.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Catalog);
    }
    if (SchemaPattern.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaPattern);
    }
    if (TableNamePattern.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TableNamePattern);
    }
    size += typeList_.CalculateSize(_repeated_typeList_codec);
    if (HasTypeList != false) {
      size += 1 + 1;
    }
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TablesRequest other) {
    if (other == null) {
      return;
    }
    if (other.Catalog.Length != 0) {
      Catalog = other.Catalog;
    }
    if (other.SchemaPattern.Length != 0) {
      SchemaPattern = other.SchemaPattern;
    }
    if (other.TableNamePattern.Length != 0) {
      TableNamePattern = other.TableNamePattern;
    }
    typeList_.Add(other.typeList_);
    if (other.HasTypeList != false) {
      HasTypeList = other.HasTypeList;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Catalog = input.ReadString();
          break;
        }
        case 18: {
          SchemaPattern = input.ReadString();
          break;
        }
        case 26: {
          TableNamePattern = input.ReadString();
          break;
        }
        case 34: {
          typeList_.AddEntriesFrom(input, _repeated_typeList_codec);
          break;
        }
        case 48: {
          HasTypeList = input.ReadBool();
          break;
        }
        case 58: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Catalog = input.ReadString();
          break;
        }
        case 18: {
          SchemaPattern = input.ReadString();
          break;
        }
        case 26: {
          TableNamePattern = input.ReadString();
          break;
        }
        case 34: {
          typeList_.AddEntriesFrom(ref input, _repeated_typeList_codec);
          break;
        }
        case 48: {
          HasTypeList = input.ReadBool();
          break;
        }
        case 58: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#getTableTypes()
/// </summary>
public sealed partial class TableTypesRequest : pb::IMessage<TableTypesRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TableTypesRequest> _parser = new pb::MessageParser<TableTypesRequest>(() => new TableTypesRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TableTypesRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TableTypesRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TableTypesRequest(TableTypesRequest other) : this() {
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TableTypesRequest Clone() {
    return new TableTypesRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TableTypesRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TableTypesRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TableTypesRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#getColumns(String, org.apache.calcite.avatica.Meta.Pat,
///   org.apache.calcite.avatica.Meta.Pat, org.apache.calcite.avatica.Meta.Pat).
/// </summary>
public sealed partial class ColumnsRequest : pb::IMessage<ColumnsRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ColumnsRequest> _parser = new pb::MessageParser<ColumnsRequest>(() => new ColumnsRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ColumnsRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ColumnsRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ColumnsRequest(ColumnsRequest other) : this() {
    catalog_ = other.catalog_;
    schemaPattern_ = other.schemaPattern_;
    tableNamePattern_ = other.tableNamePattern_;
    columnNamePattern_ = other.columnNamePattern_;
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ColumnsRequest Clone() {
    return new ColumnsRequest(this);
  }

  /// <summary>Field number for the "catalog" field.</summary>
  public const int CatalogFieldNumber = 1;
  private string catalog_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Catalog {
    get { return catalog_; }
    set {
      catalog_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "schema_pattern" field.</summary>
  public const int SchemaPatternFieldNumber = 2;
  private string schemaPattern_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SchemaPattern {
    get { return schemaPattern_; }
    set {
      schemaPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "table_name_pattern" field.</summary>
  public const int TableNamePatternFieldNumber = 3;
  private string tableNamePattern_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TableNamePattern {
    get { return tableNamePattern_; }
    set {
      tableNamePattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "column_name_pattern" field.</summary>
  public const int ColumnNamePatternFieldNumber = 4;
  private string columnNamePattern_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ColumnNamePattern {
    get { return columnNamePattern_; }
    set {
      columnNamePattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 5;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ColumnsRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ColumnsRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Catalog != other.Catalog) return false;
    if (SchemaPattern != other.SchemaPattern) return false;
    if (TableNamePattern != other.TableNamePattern) return false;
    if (ColumnNamePattern != other.ColumnNamePattern) return false;
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Catalog.Length != 0) hash ^= Catalog.GetHashCode();
    if (SchemaPattern.Length != 0) hash ^= SchemaPattern.GetHashCode();
    if (TableNamePattern.Length != 0) hash ^= TableNamePattern.GetHashCode();
    if (ColumnNamePattern.Length != 0) hash ^= ColumnNamePattern.GetHashCode();
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Catalog.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Catalog);
    }
    if (SchemaPattern.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SchemaPattern);
    }
    if (TableNamePattern.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(TableNamePattern);
    }
    if (ColumnNamePattern.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ColumnNamePattern);
    }
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Catalog.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Catalog);
    }
    if (SchemaPattern.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SchemaPattern);
    }
    if (TableNamePattern.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(TableNamePattern);
    }
    if (ColumnNamePattern.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ColumnNamePattern);
    }
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Catalog.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Catalog);
    }
    if (SchemaPattern.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaPattern);
    }
    if (TableNamePattern.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TableNamePattern);
    }
    if (ColumnNamePattern.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnNamePattern);
    }
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ColumnsRequest other) {
    if (other == null) {
      return;
    }
    if (other.Catalog.Length != 0) {
      Catalog = other.Catalog;
    }
    if (other.SchemaPattern.Length != 0) {
      SchemaPattern = other.SchemaPattern;
    }
    if (other.TableNamePattern.Length != 0) {
      TableNamePattern = other.TableNamePattern;
    }
    if (other.ColumnNamePattern.Length != 0) {
      ColumnNamePattern = other.ColumnNamePattern;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Catalog = input.ReadString();
          break;
        }
        case 18: {
          SchemaPattern = input.ReadString();
          break;
        }
        case 26: {
          TableNamePattern = input.ReadString();
          break;
        }
        case 34: {
          ColumnNamePattern = input.ReadString();
          break;
        }
        case 42: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Catalog = input.ReadString();
          break;
        }
        case 18: {
          SchemaPattern = input.ReadString();
          break;
        }
        case 26: {
          TableNamePattern = input.ReadString();
          break;
        }
        case 34: {
          ColumnNamePattern = input.ReadString();
          break;
        }
        case 42: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#getTypeInfo()
/// </summary>
public sealed partial class TypeInfoRequest : pb::IMessage<TypeInfoRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TypeInfoRequest> _parser = new pb::MessageParser<TypeInfoRequest>(() => new TypeInfoRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TypeInfoRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TypeInfoRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TypeInfoRequest(TypeInfoRequest other) : this() {
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TypeInfoRequest Clone() {
    return new TypeInfoRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TypeInfoRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TypeInfoRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TypeInfoRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#prepareAndExecute(Meta.StatementHandle, String, long, Meta.PrepareCallback)
/// </summary>
public sealed partial class PrepareAndExecuteRequest : pb::IMessage<PrepareAndExecuteRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PrepareAndExecuteRequest> _parser = new pb::MessageParser<PrepareAndExecuteRequest>(() => new PrepareAndExecuteRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PrepareAndExecuteRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrepareAndExecuteRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrepareAndExecuteRequest(PrepareAndExecuteRequest other) : this() {
    connectionId_ = other.connectionId_;
    sql_ = other.sql_;
    maxRowCount_ = other.maxRowCount_;
    statementId_ = other.statementId_;
    maxRowsTotal_ = other.maxRowsTotal_;
    firstFrameMaxSize_ = other.firstFrameMaxSize_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrepareAndExecuteRequest Clone() {
    return new PrepareAndExecuteRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sql" field.</summary>
  public const int SqlFieldNumber = 2;
  private string sql_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Sql {
    get { return sql_; }
    set {
      sql_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "max_row_count" field.</summary>
  public const int MaxRowCountFieldNumber = 3;
  private ulong maxRowCount_;
  /// <summary>
  /// Deprecated
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong MaxRowCount {
    get { return maxRowCount_; }
    set {
      maxRowCount_ = value;
    }
  }

  /// <summary>Field number for the "statement_id" field.</summary>
  public const int StatementIdFieldNumber = 4;
  private uint statementId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint StatementId {
    get { return statementId_; }
    set {
      statementId_ = value;
    }
  }

  /// <summary>Field number for the "max_rows_total" field.</summary>
  public const int MaxRowsTotalFieldNumber = 5;
  private long maxRowsTotal_;
  /// <summary>
  /// The maximum number of rows that will be allowed for this query
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long MaxRowsTotal {
    get { return maxRowsTotal_; }
    set {
      maxRowsTotal_ = value;
    }
  }

  /// <summary>Field number for the "first_frame_max_size" field.</summary>
  public const int FirstFrameMaxSizeFieldNumber = 6;
  private int firstFrameMaxSize_;
  /// <summary>
  /// The maximum number of rows that will be returned in the
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FirstFrameMaxSize {
    get { return firstFrameMaxSize_; }
    set {
      firstFrameMaxSize_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PrepareAndExecuteRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PrepareAndExecuteRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (Sql != other.Sql) return false;
    if (MaxRowCount != other.MaxRowCount) return false;
    if (StatementId != other.StatementId) return false;
    if (MaxRowsTotal != other.MaxRowsTotal) return false;
    if (FirstFrameMaxSize != other.FirstFrameMaxSize) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (Sql.Length != 0) hash ^= Sql.GetHashCode();
    if (MaxRowCount != 0UL) hash ^= MaxRowCount.GetHashCode();
    if (StatementId != 0) hash ^= StatementId.GetHashCode();
    if (MaxRowsTotal != 0L) hash ^= MaxRowsTotal.GetHashCode();
    if (FirstFrameMaxSize != 0) hash ^= FirstFrameMaxSize.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (Sql.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Sql);
    }
    if (MaxRowCount != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(MaxRowCount);
    }
    if (StatementId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(StatementId);
    }
    if (MaxRowsTotal != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(MaxRowsTotal);
    }
    if (FirstFrameMaxSize != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(FirstFrameMaxSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (Sql.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Sql);
    }
    if (MaxRowCount != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(MaxRowCount);
    }
    if (StatementId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(StatementId);
    }
    if (MaxRowsTotal != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(MaxRowsTotal);
    }
    if (FirstFrameMaxSize != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(FirstFrameMaxSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (Sql.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Sql);
    }
    if (MaxRowCount != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxRowCount);
    }
    if (StatementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatementId);
    }
    if (MaxRowsTotal != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxRowsTotal);
    }
    if (FirstFrameMaxSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstFrameMaxSize);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PrepareAndExecuteRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    if (other.Sql.Length != 0) {
      Sql = other.Sql;
    }
    if (other.MaxRowCount != 0UL) {
      MaxRowCount = other.MaxRowCount;
    }
    if (other.StatementId != 0) {
      StatementId = other.StatementId;
    }
    if (other.MaxRowsTotal != 0L) {
      MaxRowsTotal = other.MaxRowsTotal;
    }
    if (other.FirstFrameMaxSize != 0) {
      FirstFrameMaxSize = other.FirstFrameMaxSize;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 18: {
          Sql = input.ReadString();
          break;
        }
        case 24: {
          MaxRowCount = input.ReadUInt64();
          break;
        }
        case 32: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 40: {
          MaxRowsTotal = input.ReadInt64();
          break;
        }
        case 48: {
          FirstFrameMaxSize = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 18: {
          Sql = input.ReadString();
          break;
        }
        case 24: {
          MaxRowCount = input.ReadUInt64();
          break;
        }
        case 32: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 40: {
          MaxRowsTotal = input.ReadInt64();
          break;
        }
        case 48: {
          FirstFrameMaxSize = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta.prepare(Meta.ConnectionHandle, String, long)
/// </summary>
public sealed partial class PrepareRequest : pb::IMessage<PrepareRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PrepareRequest> _parser = new pb::MessageParser<PrepareRequest>(() => new PrepareRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PrepareRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrepareRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrepareRequest(PrepareRequest other) : this() {
    connectionId_ = other.connectionId_;
    sql_ = other.sql_;
    maxRowCount_ = other.maxRowCount_;
    maxRowsTotal_ = other.maxRowsTotal_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrepareRequest Clone() {
    return new PrepareRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sql" field.</summary>
  public const int SqlFieldNumber = 2;
  private string sql_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Sql {
    get { return sql_; }
    set {
      sql_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "max_row_count" field.</summary>
  public const int MaxRowCountFieldNumber = 3;
  private ulong maxRowCount_;
  /// <summary>
  /// Deprecated
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong MaxRowCount {
    get { return maxRowCount_; }
    set {
      maxRowCount_ = value;
    }
  }

  /// <summary>Field number for the "max_rows_total" field.</summary>
  public const int MaxRowsTotalFieldNumber = 4;
  private long maxRowsTotal_;
  /// <summary>
  /// The maximum number of rows that will be allowed for this query
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long MaxRowsTotal {
    get { return maxRowsTotal_; }
    set {
      maxRowsTotal_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PrepareRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PrepareRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (Sql != other.Sql) return false;
    if (MaxRowCount != other.MaxRowCount) return false;
    if (MaxRowsTotal != other.MaxRowsTotal) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (Sql.Length != 0) hash ^= Sql.GetHashCode();
    if (MaxRowCount != 0UL) hash ^= MaxRowCount.GetHashCode();
    if (MaxRowsTotal != 0L) hash ^= MaxRowsTotal.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (Sql.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Sql);
    }
    if (MaxRowCount != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(MaxRowCount);
    }
    if (MaxRowsTotal != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(MaxRowsTotal);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (Sql.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Sql);
    }
    if (MaxRowCount != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(MaxRowCount);
    }
    if (MaxRowsTotal != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(MaxRowsTotal);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (Sql.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Sql);
    }
    if (MaxRowCount != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxRowCount);
    }
    if (MaxRowsTotal != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxRowsTotal);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PrepareRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    if (other.Sql.Length != 0) {
      Sql = other.Sql;
    }
    if (other.MaxRowCount != 0UL) {
      MaxRowCount = other.MaxRowCount;
    }
    if (other.MaxRowsTotal != 0L) {
      MaxRowsTotal = other.MaxRowsTotal;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 18: {
          Sql = input.ReadString();
          break;
        }
        case 24: {
          MaxRowCount = input.ReadUInt64();
          break;
        }
        case 32: {
          MaxRowsTotal = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 18: {
          Sql = input.ReadString();
          break;
        }
        case 24: {
          MaxRowCount = input.ReadUInt64();
          break;
        }
        case 32: {
          MaxRowsTotal = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#fetch(Meta.StatementHandle, List, long, int)
/// </summary>
public sealed partial class FetchRequest : pb::IMessage<FetchRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<FetchRequest> _parser = new pb::MessageParser<FetchRequest>(() => new FetchRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FetchRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FetchRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FetchRequest(FetchRequest other) : this() {
    connectionId_ = other.connectionId_;
    statementId_ = other.statementId_;
    offset_ = other.offset_;
    fetchMaxRowCount_ = other.fetchMaxRowCount_;
    frameMaxSize_ = other.frameMaxSize_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FetchRequest Clone() {
    return new FetchRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statement_id" field.</summary>
  public const int StatementIdFieldNumber = 2;
  private uint statementId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint StatementId {
    get { return statementId_; }
    set {
      statementId_ = value;
    }
  }

  /// <summary>Field number for the "offset" field.</summary>
  public const int OffsetFieldNumber = 3;
  private ulong offset_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Offset {
    get { return offset_; }
    set {
      offset_ = value;
    }
  }

  /// <summary>Field number for the "fetch_max_row_count" field.</summary>
  public const int FetchMaxRowCountFieldNumber = 4;
  private uint fetchMaxRowCount_;
  /// <summary>
  /// Maximum number of rows to be returned in the frame. Negative means no limit. Deprecated!
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint FetchMaxRowCount {
    get { return fetchMaxRowCount_; }
    set {
      fetchMaxRowCount_ = value;
    }
  }

  /// <summary>Field number for the "frame_max_size" field.</summary>
  public const int FrameMaxSizeFieldNumber = 5;
  private int frameMaxSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FrameMaxSize {
    get { return frameMaxSize_; }
    set {
      frameMaxSize_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FetchRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FetchRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (StatementId != other.StatementId) return false;
    if (Offset != other.Offset) return false;
    if (FetchMaxRowCount != other.FetchMaxRowCount) return false;
    if (FrameMaxSize != other.FrameMaxSize) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (StatementId != 0) hash ^= StatementId.GetHashCode();
    if (Offset != 0UL) hash ^= Offset.GetHashCode();
    if (FetchMaxRowCount != 0) hash ^= FetchMaxRowCount.GetHashCode();
    if (FrameMaxSize != 0) hash ^= FrameMaxSize.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    if (Offset != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(Offset);
    }
    if (FetchMaxRowCount != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(FetchMaxRowCount);
    }
    if (FrameMaxSize != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(FrameMaxSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    if (Offset != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(Offset);
    }
    if (FetchMaxRowCount != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(FetchMaxRowCount);
    }
    if (FrameMaxSize != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(FrameMaxSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (StatementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatementId);
    }
    if (Offset != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Offset);
    }
    if (FetchMaxRowCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FetchMaxRowCount);
    }
    if (FrameMaxSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameMaxSize);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FetchRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    if (other.StatementId != 0) {
      StatementId = other.StatementId;
    }
    if (other.Offset != 0UL) {
      Offset = other.Offset;
    }
    if (other.FetchMaxRowCount != 0) {
      FetchMaxRowCount = other.FetchMaxRowCount;
    }
    if (other.FrameMaxSize != 0) {
      FrameMaxSize = other.FrameMaxSize;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 24: {
          Offset = input.ReadUInt64();
          break;
        }
        case 32: {
          FetchMaxRowCount = input.ReadUInt32();
          break;
        }
        case 40: {
          FrameMaxSize = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 24: {
          Offset = input.ReadUInt64();
          break;
        }
        case 32: {
          FetchMaxRowCount = input.ReadUInt32();
          break;
        }
        case 40: {
          FrameMaxSize = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#createStatement(Meta.ConnectionHandle)
/// </summary>
public sealed partial class CreateStatementRequest : pb::IMessage<CreateStatementRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CreateStatementRequest> _parser = new pb::MessageParser<CreateStatementRequest>(() => new CreateStatementRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateStatementRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateStatementRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateStatementRequest(CreateStatementRequest other) : this() {
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateStatementRequest Clone() {
    return new CreateStatementRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateStatementRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateStatementRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateStatementRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#closeStatement(Meta.StatementHandle)
/// </summary>
public sealed partial class CloseStatementRequest : pb::IMessage<CloseStatementRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CloseStatementRequest> _parser = new pb::MessageParser<CloseStatementRequest>(() => new CloseStatementRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CloseStatementRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloseStatementRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloseStatementRequest(CloseStatementRequest other) : this() {
    connectionId_ = other.connectionId_;
    statementId_ = other.statementId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloseStatementRequest Clone() {
    return new CloseStatementRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statement_id" field.</summary>
  public const int StatementIdFieldNumber = 2;
  private uint statementId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint StatementId {
    get { return statementId_; }
    set {
      statementId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CloseStatementRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CloseStatementRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (StatementId != other.StatementId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (StatementId != 0) hash ^= StatementId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (StatementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatementId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CloseStatementRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    if (other.StatementId != 0) {
      StatementId = other.StatementId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#openConnection(Meta.ConnectionHandle, Map&lt;String, String>)
/// </summary>
public sealed partial class OpenConnectionRequest : pb::IMessage<OpenConnectionRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<OpenConnectionRequest> _parser = new pb::MessageParser<OpenConnectionRequest>(() => new OpenConnectionRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<OpenConnectionRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OpenConnectionRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OpenConnectionRequest(OpenConnectionRequest other) : this() {
    connectionId_ = other.connectionId_;
    info_ = other.info_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OpenConnectionRequest Clone() {
    return new OpenConnectionRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 2;
  private static readonly pbc::MapField<string, string>.Codec _map_info_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
  private readonly pbc::MapField<string, string> info_ = new pbc::MapField<string, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> Info {
    get { return info_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as OpenConnectionRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(OpenConnectionRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (!Info.Equals(other.Info)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    hash ^= Info.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    info_.WriteTo(output, _map_info_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    info_.WriteTo(ref output, _map_info_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    size += info_.CalculateSize(_map_info_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(OpenConnectionRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    info_.Add(other.info_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 18: {
          info_.AddEntriesFrom(input, _map_info_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 18: {
          info_.AddEntriesFrom(ref input, _map_info_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#closeConnection(Meta.ConnectionHandle)
/// </summary>
public sealed partial class CloseConnectionRequest : pb::IMessage<CloseConnectionRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CloseConnectionRequest> _parser = new pb::MessageParser<CloseConnectionRequest>(() => new CloseConnectionRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CloseConnectionRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloseConnectionRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloseConnectionRequest(CloseConnectionRequest other) : this() {
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CloseConnectionRequest Clone() {
    return new CloseConnectionRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CloseConnectionRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CloseConnectionRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CloseConnectionRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ConnectionSyncRequest : pb::IMessage<ConnectionSyncRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ConnectionSyncRequest> _parser = new pb::MessageParser<ConnectionSyncRequest>(() => new ConnectionSyncRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ConnectionSyncRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionSyncRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionSyncRequest(ConnectionSyncRequest other) : this() {
    connectionId_ = other.connectionId_;
    connProps_ = other.connProps_ != null ? other.connProps_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionSyncRequest Clone() {
    return new ConnectionSyncRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "conn_props" field.</summary>
  public const int ConnPropsFieldNumber = 2;
  private global::ConnectionProperties connProps_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ConnectionProperties ConnProps {
    get { return connProps_; }
    set {
      connProps_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ConnectionSyncRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ConnectionSyncRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (!object.Equals(ConnProps, other.ConnProps)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (connProps_ != null) hash ^= ConnProps.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (connProps_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(ConnProps);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (connProps_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(ConnProps);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (connProps_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnProps);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ConnectionSyncRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    if (other.connProps_ != null) {
      if (connProps_ == null) {
        ConnProps = new global::ConnectionProperties();
      }
      ConnProps.MergeFrom(other.ConnProps);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 18: {
          if (connProps_ == null) {
            ConnProps = new global::ConnectionProperties();
          }
          input.ReadMessage(ConnProps);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 18: {
          if (connProps_ == null) {
            ConnProps = new global::ConnectionProperties();
          }
          input.ReadMessage(ConnProps);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request for Meta#execute(Meta.ConnectionHandle, list, long)
/// </summary>
public sealed partial class ExecuteRequest : pb::IMessage<ExecuteRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ExecuteRequest> _parser = new pb::MessageParser<ExecuteRequest>(() => new ExecuteRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ExecuteRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ExecuteRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ExecuteRequest(ExecuteRequest other) : this() {
    statementHandle_ = other.statementHandle_ != null ? other.statementHandle_.Clone() : null;
    parameterValues_ = other.parameterValues_.Clone();
    deprecatedFirstFrameMaxSize_ = other.deprecatedFirstFrameMaxSize_;
    hasParameterValues_ = other.hasParameterValues_;
    firstFrameMaxSize_ = other.firstFrameMaxSize_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ExecuteRequest Clone() {
    return new ExecuteRequest(this);
  }

  /// <summary>Field number for the "statementHandle" field.</summary>
  public const int StatementHandleFieldNumber = 1;
  private global::StatementHandle statementHandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatementHandle StatementHandle {
    get { return statementHandle_; }
    set {
      statementHandle_ = value;
    }
  }

  /// <summary>Field number for the "parameter_values" field.</summary>
  public const int ParameterValuesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::TypedValue> _repeated_parameterValues_codec
      = pb::FieldCodec.ForMessage(18, global::TypedValue.Parser);
  private readonly pbc::RepeatedField<global::TypedValue> parameterValues_ = new pbc::RepeatedField<global::TypedValue>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::TypedValue> ParameterValues {
    get { return parameterValues_; }
  }

  /// <summary>Field number for the "deprecated_first_frame_max_size" field.</summary>
  public const int DeprecatedFirstFrameMaxSizeFieldNumber = 3;
  private ulong deprecatedFirstFrameMaxSize_;
  /// <summary>
  /// Deprecated, use the signed int instead.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong DeprecatedFirstFrameMaxSize {
    get { return deprecatedFirstFrameMaxSize_; }
    set {
      deprecatedFirstFrameMaxSize_ = value;
    }
  }

  /// <summary>Field number for the "has_parameter_values" field.</summary>
  public const int HasParameterValuesFieldNumber = 4;
  private bool hasParameterValues_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasParameterValues {
    get { return hasParameterValues_; }
    set {
      hasParameterValues_ = value;
    }
  }

  /// <summary>Field number for the "first_frame_max_size" field.</summary>
  public const int FirstFrameMaxSizeFieldNumber = 5;
  private int firstFrameMaxSize_;
  /// <summary>
  /// The maximum number of rows to return in the first Frame
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FirstFrameMaxSize {
    get { return firstFrameMaxSize_; }
    set {
      firstFrameMaxSize_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ExecuteRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ExecuteRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatementHandle, other.StatementHandle)) return false;
    if(!parameterValues_.Equals(other.parameterValues_)) return false;
    if (DeprecatedFirstFrameMaxSize != other.DeprecatedFirstFrameMaxSize) return false;
    if (HasParameterValues != other.HasParameterValues) return false;
    if (FirstFrameMaxSize != other.FirstFrameMaxSize) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statementHandle_ != null) hash ^= StatementHandle.GetHashCode();
    hash ^= parameterValues_.GetHashCode();
    if (DeprecatedFirstFrameMaxSize != 0UL) hash ^= DeprecatedFirstFrameMaxSize.GetHashCode();
    if (HasParameterValues != false) hash ^= HasParameterValues.GetHashCode();
    if (FirstFrameMaxSize != 0) hash ^= FirstFrameMaxSize.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (statementHandle_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(StatementHandle);
    }
    parameterValues_.WriteTo(output, _repeated_parameterValues_codec);
    if (DeprecatedFirstFrameMaxSize != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(DeprecatedFirstFrameMaxSize);
    }
    if (HasParameterValues != false) {
      output.WriteRawTag(32);
      output.WriteBool(HasParameterValues);
    }
    if (FirstFrameMaxSize != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(FirstFrameMaxSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (statementHandle_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(StatementHandle);
    }
    parameterValues_.WriteTo(ref output, _repeated_parameterValues_codec);
    if (DeprecatedFirstFrameMaxSize != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(DeprecatedFirstFrameMaxSize);
    }
    if (HasParameterValues != false) {
      output.WriteRawTag(32);
      output.WriteBool(HasParameterValues);
    }
    if (FirstFrameMaxSize != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(FirstFrameMaxSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statementHandle_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatementHandle);
    }
    size += parameterValues_.CalculateSize(_repeated_parameterValues_codec);
    if (DeprecatedFirstFrameMaxSize != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DeprecatedFirstFrameMaxSize);
    }
    if (HasParameterValues != false) {
      size += 1 + 1;
    }
    if (FirstFrameMaxSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstFrameMaxSize);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ExecuteRequest other) {
    if (other == null) {
      return;
    }
    if (other.statementHandle_ != null) {
      if (statementHandle_ == null) {
        StatementHandle = new global::StatementHandle();
      }
      StatementHandle.MergeFrom(other.StatementHandle);
    }
    parameterValues_.Add(other.parameterValues_);
    if (other.DeprecatedFirstFrameMaxSize != 0UL) {
      DeprecatedFirstFrameMaxSize = other.DeprecatedFirstFrameMaxSize;
    }
    if (other.HasParameterValues != false) {
      HasParameterValues = other.HasParameterValues;
    }
    if (other.FirstFrameMaxSize != 0) {
      FirstFrameMaxSize = other.FirstFrameMaxSize;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (statementHandle_ == null) {
            StatementHandle = new global::StatementHandle();
          }
          input.ReadMessage(StatementHandle);
          break;
        }
        case 18: {
          parameterValues_.AddEntriesFrom(input, _repeated_parameterValues_codec);
          break;
        }
        case 24: {
          DeprecatedFirstFrameMaxSize = input.ReadUInt64();
          break;
        }
        case 32: {
          HasParameterValues = input.ReadBool();
          break;
        }
        case 40: {
          FirstFrameMaxSize = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (statementHandle_ == null) {
            StatementHandle = new global::StatementHandle();
          }
          input.ReadMessage(StatementHandle);
          break;
        }
        case 18: {
          parameterValues_.AddEntriesFrom(ref input, _repeated_parameterValues_codec);
          break;
        }
        case 24: {
          DeprecatedFirstFrameMaxSize = input.ReadUInt64();
          break;
        }
        case 32: {
          HasParameterValues = input.ReadBool();
          break;
        }
        case 40: {
          FirstFrameMaxSize = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class SyncResultsRequest : pb::IMessage<SyncResultsRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SyncResultsRequest> _parser = new pb::MessageParser<SyncResultsRequest>(() => new SyncResultsRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SyncResultsRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncResultsRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncResultsRequest(SyncResultsRequest other) : this() {
    connectionId_ = other.connectionId_;
    statementId_ = other.statementId_;
    state_ = other.state_ != null ? other.state_.Clone() : null;
    offset_ = other.offset_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncResultsRequest Clone() {
    return new SyncResultsRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statement_id" field.</summary>
  public const int StatementIdFieldNumber = 2;
  private uint statementId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint StatementId {
    get { return statementId_; }
    set {
      statementId_ = value;
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 3;
  private global::QueryState state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::QueryState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "offset" field.</summary>
  public const int OffsetFieldNumber = 4;
  private ulong offset_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Offset {
    get { return offset_; }
    set {
      offset_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SyncResultsRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SyncResultsRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (StatementId != other.StatementId) return false;
    if (!object.Equals(State, other.State)) return false;
    if (Offset != other.Offset) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (StatementId != 0) hash ^= StatementId.GetHashCode();
    if (state_ != null) hash ^= State.GetHashCode();
    if (Offset != 0UL) hash ^= Offset.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    if (state_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(State);
    }
    if (Offset != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(Offset);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    if (state_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(State);
    }
    if (Offset != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(Offset);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (StatementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatementId);
    }
    if (state_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
    }
    if (Offset != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Offset);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SyncResultsRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    if (other.StatementId != 0) {
      StatementId = other.StatementId;
    }
    if (other.state_ != null) {
      if (state_ == null) {
        State = new global::QueryState();
      }
      State.MergeFrom(other.State);
    }
    if (other.Offset != 0UL) {
      Offset = other.Offset;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (state_ == null) {
            State = new global::QueryState();
          }
          input.ReadMessage(State);
          break;
        }
        case 32: {
          Offset = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (state_ == null) {
            State = new global::QueryState();
          }
          input.ReadMessage(State);
          break;
        }
        case 32: {
          Offset = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request to invoke a commit on a Connection
/// </summary>
public sealed partial class CommitRequest : pb::IMessage<CommitRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CommitRequest> _parser = new pb::MessageParser<CommitRequest>(() => new CommitRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CommitRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CommitRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CommitRequest(CommitRequest other) : this() {
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CommitRequest Clone() {
    return new CommitRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CommitRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CommitRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CommitRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request to invoke rollback on a Connection
/// </summary>
public sealed partial class RollbackRequest : pb::IMessage<RollbackRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RollbackRequest> _parser = new pb::MessageParser<RollbackRequest>(() => new RollbackRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RollbackRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RollbackRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RollbackRequest(RollbackRequest other) : this() {
    connectionId_ = other.connectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RollbackRequest Clone() {
    return new RollbackRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RollbackRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RollbackRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RollbackRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Request to prepare and execute a collection of sql statements.
/// </summary>
public sealed partial class PrepareAndExecuteBatchRequest : pb::IMessage<PrepareAndExecuteBatchRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PrepareAndExecuteBatchRequest> _parser = new pb::MessageParser<PrepareAndExecuteBatchRequest>(() => new PrepareAndExecuteBatchRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PrepareAndExecuteBatchRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrepareAndExecuteBatchRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrepareAndExecuteBatchRequest(PrepareAndExecuteBatchRequest other) : this() {
    connectionId_ = other.connectionId_;
    statementId_ = other.statementId_;
    sqlCommands_ = other.sqlCommands_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PrepareAndExecuteBatchRequest Clone() {
    return new PrepareAndExecuteBatchRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statement_id" field.</summary>
  public const int StatementIdFieldNumber = 2;
  private uint statementId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint StatementId {
    get { return statementId_; }
    set {
      statementId_ = value;
    }
  }

  /// <summary>Field number for the "sql_commands" field.</summary>
  public const int SqlCommandsFieldNumber = 3;
  private static readonly pb::FieldCodec<string> _repeated_sqlCommands_codec
      = pb::FieldCodec.ForString(26);
  private readonly pbc::RepeatedField<string> sqlCommands_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> SqlCommands {
    get { return sqlCommands_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PrepareAndExecuteBatchRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PrepareAndExecuteBatchRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (StatementId != other.StatementId) return false;
    if(!sqlCommands_.Equals(other.sqlCommands_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (StatementId != 0) hash ^= StatementId.GetHashCode();
    hash ^= sqlCommands_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    sqlCommands_.WriteTo(output, _repeated_sqlCommands_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    sqlCommands_.WriteTo(ref output, _repeated_sqlCommands_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (StatementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatementId);
    }
    size += sqlCommands_.CalculateSize(_repeated_sqlCommands_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PrepareAndExecuteBatchRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    if (other.StatementId != 0) {
      StatementId = other.StatementId;
    }
    sqlCommands_.Add(other.sqlCommands_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 26: {
          sqlCommands_.AddEntriesFrom(input, _repeated_sqlCommands_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 26: {
          sqlCommands_.AddEntriesFrom(ref input, _repeated_sqlCommands_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Each command is a list of TypedValues
/// </summary>
public sealed partial class UpdateBatch : pb::IMessage<UpdateBatch>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<UpdateBatch> _parser = new pb::MessageParser<UpdateBatch>(() => new UpdateBatch());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateBatch> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateBatch() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateBatch(UpdateBatch other) : this() {
    parameterValues_ = other.parameterValues_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateBatch Clone() {
    return new UpdateBatch(this);
  }

  /// <summary>Field number for the "parameter_values" field.</summary>
  public const int ParameterValuesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::TypedValue> _repeated_parameterValues_codec
      = pb::FieldCodec.ForMessage(10, global::TypedValue.Parser);
  private readonly pbc::RepeatedField<global::TypedValue> parameterValues_ = new pbc::RepeatedField<global::TypedValue>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::TypedValue> ParameterValues {
    get { return parameterValues_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateBatch);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateBatch other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!parameterValues_.Equals(other.parameterValues_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= parameterValues_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    parameterValues_.WriteTo(output, _repeated_parameterValues_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    parameterValues_.WriteTo(ref output, _repeated_parameterValues_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += parameterValues_.CalculateSize(_repeated_parameterValues_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateBatch other) {
    if (other == null) {
      return;
    }
    parameterValues_.Add(other.parameterValues_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          parameterValues_.AddEntriesFrom(input, _repeated_parameterValues_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          parameterValues_.AddEntriesFrom(ref input, _repeated_parameterValues_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ExecuteBatchRequest : pb::IMessage<ExecuteBatchRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ExecuteBatchRequest> _parser = new pb::MessageParser<ExecuteBatchRequest>(() => new ExecuteBatchRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ExecuteBatchRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RequestsReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ExecuteBatchRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ExecuteBatchRequest(ExecuteBatchRequest other) : this() {
    connectionId_ = other.connectionId_;
    statementId_ = other.statementId_;
    updates_ = other.updates_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ExecuteBatchRequest Clone() {
    return new ExecuteBatchRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private string connectionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ConnectionId {
    get { return connectionId_; }
    set {
      connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statement_id" field.</summary>
  public const int StatementIdFieldNumber = 2;
  private uint statementId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint StatementId {
    get { return statementId_; }
    set {
      statementId_ = value;
    }
  }

  /// <summary>Field number for the "updates" field.</summary>
  public const int UpdatesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::UpdateBatch> _repeated_updates_codec
      = pb::FieldCodec.ForMessage(26, global::UpdateBatch.Parser);
  private readonly pbc::RepeatedField<global::UpdateBatch> updates_ = new pbc::RepeatedField<global::UpdateBatch>();
  /// <summary>
  /// A batch of updates is a list&lt;list&lt;typevalue>>
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UpdateBatch> Updates {
    get { return updates_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ExecuteBatchRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ExecuteBatchRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (StatementId != other.StatementId) return false;
    if(!updates_.Equals(other.updates_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
    if (StatementId != 0) hash ^= StatementId.GetHashCode();
    hash ^= updates_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    updates_.WriteTo(output, _repeated_updates_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ConnectionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionId);
    }
    if (StatementId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StatementId);
    }
    updates_.WriteTo(ref output, _repeated_updates_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
    }
    if (StatementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatementId);
    }
    size += updates_.CalculateSize(_repeated_updates_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ExecuteBatchRequest other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionId.Length != 0) {
      ConnectionId = other.ConnectionId;
    }
    if (other.StatementId != 0) {
      StatementId = other.StatementId;
    }
    updates_.Add(other.updates_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 26: {
          updates_.AddEntriesFrom(input, _repeated_updates_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionId = input.ReadString();
          break;
        }
        case 16: {
          StatementId = input.ReadUInt32();
          break;
        }
        case 26: {
          updates_.AddEntriesFrom(ref input, _repeated_updates_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
